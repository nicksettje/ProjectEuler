module Euler2 where

import EulerProblem

question2 :: Question
question2 = "Question:\n\n\
\Each new term in the Fibonacci sequence is generated by adding the previous two terms. By starting with 1 and 2, the first 10 terms will be:\n\
\1, 2, 3, 5, 8, 13, 21, 34, 55, 89, ...\n\
\By considering the terms in the Fibonacci sequence whose values do not exceed four million, find the sum of the even-valued terms.\n\n\
\Answer:\n" 

answer2 :: Answer
answer2 = show (sum (map oddToZero (takeWhile (<4000000) (map fibonacci [1..]))))

fibonacci :: Integer -> Integer
fibonacci 0 = 0
fibonacci 1 = 1
fibonacci n = fibonacci(n-1) + fibonacci(n-2)

oddToZero :: Integer -> Integer
oddToZero n
    | n `mod` 2 == 0 = n
    | otherwise = 0 
